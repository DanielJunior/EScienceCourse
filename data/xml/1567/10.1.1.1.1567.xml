<document id="10.1.1.1.1567"><title src="SVM HeaderParse 0.1">Abstract P-RANK: Efficient Ranked Keyword Search Using P-tree</title><abstract src="SVM HeaderParse 0.1">Nowadays, XML is becoming the standard for electronic information representation and exchange in our lives. Access to information presented in hyperlinked XML documents and other formats have always been in demand by users. In this paper, we describe the architecture, implementation, and evaluation of the P-RANK system built to address the requirement for efficient ranked keyword search over hyperlinked XML documents. Our contributions include presenting a new efficient keyword search system using a genuine data structure called the P-tree, a novel ranking method based on dimension rank voting, and a fast rank sorting method using the EIN-ring. Keywords: Middleware, XML, P-trees, EIN-ring. 1.</abstract><keywords></keywords><authors><author id="4362"><name src="SVM HeaderParse 0.1">Fei Pan</name><address src="SVM HeaderParse 0.1">Fargo, ND 58105</address><email src="SVM HeaderParse 0.1">fei.pan @ndsu.nodak.edu</email><order>1</order></author><author id="4363"><name src="SVM HeaderParse 0.1">Imad Rahal</name><address src="SVM HeaderParse 0.1">Fargo, ND 58105</address><email src="SVM HeaderParse 0.1">imad.rahal @ndsu.nodak.edu</email><order>2</order></author><author id="4364"><name src="SVM HeaderParse 0.1">Yue Cui</name><address src="SVM HeaderParse 0.1">Fargo, ND 58105</address><email src="SVM HeaderParse 0.1">yue.cui @ndsu.nodak.edu</email><order>3</order></author><author id="4365"><name src="SVM HeaderParse 0.1">William Perrizo</name><address src="SVM HeaderParse 0.1">Fargo, ND 58105</address><email src="SVM HeaderParse 0.1">william.perrizo@ndsu.nodak.edu</email><order>4</order></author></authors><citations src="ParsCit 1.0"><citation id="29508"><authors>W Perrizo</authors><title>Peano count tree technology lab notes</title><venType>TECHREPORT</venType><year>2001</year><tech>Technical Report NDSU-CS-TR-01-1</tech><raw>Perrizo, W., Peano count tree technology lab notes. Technical Report NDSU-CS-TR-01-1, 2001. http://www.cs.ndsu.nodak.edu/~perrizo/classes/785/pct.html. January 2003.</raw><contexts><context> Data Model and Representation In this section, we first present the vector model data representation, and then briefly review a novel compressed column-wise quadrant-based tree structure, the P-tree [1]. 2.1 Data Representation The vector space model is a simple ubiquitous approach used to represent text documents in machine understandable formats [3] [4] [5]. It is characterized by being relatively</context><context>at store numeric relational data in a lossless bit-compressed column-wise format by splitting each attribute into bits, grouping bits in each bit position, and representing each bit group by a P-tree [1]. A P-tree can be 1dimensional, 2-dimensional, 3-dimensional, etc. In this brief review, we will focus on 1-dimensional P-trees. Given a data set with d attributes, X = (A1, A2 … Ad), and the binary r</context></contexts></citation><citation id="29509"><authors>M Khan,Q Ding,W Perrizo</authors><title>K-nearest neighbor classification on spatial data streams Using P-trees</title><venue>Proceedings of the PAKDD, Pacific-Asia Conference on Knowledge Discovery and Data Mining</venue><venType>CONFERENCE</venType><year>2002</year><pubAddress>Taipei, Taiwan</pubAddress><raw>M. Khan, Q. Ding, and W. Perrizo, K-nearest neighbor classification on spatial data streams Using P-trees. Proceedings of the PAKDD, Pacific-Asia Conference on Knowledge Discovery and Data Mining (Taipei, Taiwan), 2002.</raw></citation><citation id="29510"><authors>G Salton,C Buckley</authors><title>Term-weighting approaches in automatic text retrieval</title><venue>Information Processing &amp; Management</venue><venType>CONFERENCE</venType><year>1988</year><pages>513--523</pages><volume>24</volume><raw>G. Salton and C. Buckley, “Term-weighting approaches in automatic text retrieval.” Information Processing &amp; Management, 24(5), 513-523, May 1988.</raw><contexts><context>n-wise quadrant-based tree structure, the P-tree [1]. 2.1 Data Representation The vector space model is a simple ubiquitous approach used to represent text documents in machine understandable formats [3] [4] [5]. It is characterized by being relatively computationally efficient and by having conceptual simplicity; however, it suffers from loss of information related to the original document structure</context></contexts></citation><citation id="29511"><authors>G Salton,M J McGill</authors><title>Introduction to modern information retrieval</title><year>1983</year><publisher>McGraw-Hill</publisher><pubAddress>New York</pubAddress><raw>G. Salton and M.J. McGill, Introduction to modern information retrieval. McGraw-Hill, New York, 1983.</raw><contexts><context>se quadrant-based tree structure, the P-tree [1]. 2.1 Data Representation The vector space model is a simple ubiquitous approach used to represent text documents in machine understandable formats [3] [4] [5]. It is characterized by being relatively computationally efficient and by having conceptual simplicity; however, it suffers from loss of information related to the original document structure suc</context></contexts></citation><citation id="29512"><authors>G Salton,A Wong,C Yang</authors><title>A vector space model for automatic indexing</title><venue>Communications of the ACM</venue><venType>JOURNAL</venType><year>1975</year><volume>18</volume><raw>G. Salton, A. Wong, and C. Yang, &amp;quot;A vector space model for automatic indexing.” Communications of the ACM 18(11), 613--620, November 1975.</raw><contexts><context>uadrant-based tree structure, the P-tree [1]. 2.1 Data Representation The vector space model is a simple ubiquitous approach used to represent text documents in machine understandable formats [3] [4] [5]. It is characterized by being relatively computationally efficient and by having conceptual simplicity; however, it suffers from loss of information related to the original document structure such as</context></contexts></citation><citation id="29513"><title>International Organization for Standardization (ISO 8879</title><year>1986</year><raw>International Organization for Standardization (ISO 8879, 1986) http://www.iso.ch/iso/en/CatalogueDetailPage.CatalogueDetail ?CSNUMBER=16387. July 2003.</raw><contexts><context>ing method using the EIN-ring. Keywords: Middleware, XML, P-trees, EIN-ring. 1. Introduction The eXtensible Markup Language (XML) is a simple, very flexible hierarchical text format derived from SGML [6] to represent documents containing structured information. An XML document is made up of nested tags where each tag can also be nested. Usually, there is a single root tag for every document. Tags can</context></contexts></citation><citation id="29514"><authors>L Guo,F Shao,G Botev,J Shanmugasundaram</authors><title>XRANK: Ranked keyword search over XML documents</title><venue>Proceedings of the ACM SIGMOD, Special Interest Group in Management of Data</venue><venType>CONFERENCE</venType><pages>16--27</pages><pubAddress>San Diego, California</pubAddress><raw>L. Guo, F. Shao, G. Botev, and J. Shanmugasundaram, XRANK: Ranked keyword search over XML documents. Proceedings of the ACM SIGMOD, Special Interest Group in Management of Data (San Diego, California), 16-27, 2003</raw><contexts><context>eger value given to each document, d, to express the referencing importance of d to other documents in the document set. It is calculated as the total number of document references (IDREFs and Xlinks [8]) to d. All the tags of a document will have the same reference weight since references are usually document based and not tag based. The depth weight reflects the hierarchical structure of an XML doc</context></contexts></citation><citation id="29515"><authors>S Brin,L Page</authors><title>The Anatomy of a Large-Scale Hypertextual</title><venue>Web Search Engine, WWW Conf</venue><venType>CONFERENCE</venType><year>1998</year><raw>S. Brin, L. Page, The Anatomy of a Large-Scale Hypertextual Web Search Engine, WWW Conf., 1998.</raw><contexts><context>ethod based on weight voting. We will also present an efficient result sorting method using EIN-rings and P-trees. 4.1 Ranking by Votes Traditional methods for ranking queries results, such as Google [9] [10], are based on the use of fixed ranking formulas, which integrate different dimension weights into the ranking score and evaluate documents accordingly. This scheme is straightforward and natural</context></contexts></citation><citation id="29516"><authors>J Kleinberg</authors><title>Authoritative Sources in a Hyperlinked Environment</title><venue>JACM</venue><venType>JOURNAL</venType><year>1999</year><volume>46</volume><raw>J. Kleinberg, “Authoritative Sources in a Hyperlinked Environment”, JACM 46(5), 1999.</raw><contexts><context>d based on weight voting. We will also present an efficient result sorting method using EIN-rings and P-trees. 4.1 Ranking by Votes Traditional methods for ranking queries results, such as Google [9] [10], are based on the use of fixed ranking formulas, which integrate different dimension weights into the ranking score and evaluate documents accordingly. This scheme is straightforward and natural; how</context></contexts></citation><citation id="29517"><authors>F Pan,B Wang,B,W Perrizo</authors><venue>Rapid, Accurate, Scalable Nearest-Neighbor Classification. http://www.cs.ndsu.nodak.edu/~datasurg/papers/review/03_EN N.pdf</venue><venType>CONFERENCE</venType><year>2003</year><raw>F. Pan, B. Wang, B., and W. Perrizo, Rapid, Accurate, Scalable Nearest-Neighbor Classification. http://www.cs.ndsu.nodak.edu/~datasurg/papers/review/03_EN N.pdf. July 2003.</raw><contexts><context>ssue of ranking the results of keyword search queries over XML documents. 4.2.1 EIN-ring D1 D2 D 3 Tag 1 3 3 1 Tag 2 2 2 2 Tag 3 1 1 3 We describe a unique equal interval neighborhood ring (EIN-ring) [11], which is used for ranking results of keyword queries. We first define neighborhood rings and EIN-rings, and then give some propositions on the calculation of EIN-rings using P-trees. We use ∧, ∨ and</context><context>ch (IL-ID) and another was ordered by rank approach (IL-rank). The P-RANK implementation adhered to the algorithmic description presented herein. Details for the P-tree implementation can be found in [11]. We experimented on the DBLP data set [13]. Performance results using randomly generated keywords are shown in Figure 9. Average Run Time (s) 12 10 8 6 4 2 0 IL-rank IL-ID PRANK 1 2 3 4 5 Number of K</context></contexts></citation><citation id="29518"><authors>I Rahal,W Perrizo</authors><title>An optimized P-tree based KNN approach for Text Categorization. http://www.cs.ndsu.nodak.edu/~rahal/research/textmining/ICD M_R214.pdf</title><year>2003</year><raw>I. Rahal and W. Perrizo, An optimized P-tree based KNN approach for Text Categorization. http://www.cs.ndsu.nodak.edu/~rahal/research/textmining/ICD M_R214.pdf. July 2003.</raw><contexts><context> depicts an abstract level view of the architecture of P-RANK. Documents are transformed to a document tag by term matrix using the weighting schemes and the optional preprocessing steps discussed in [12]. This matrix is then, in turn, converted to its P-tree representation by using the P-tree Capture Interface [13]. The result of this last step is fed into the P-RANK engine. When users submit keyword</context></contexts></citation><citation id="29519"><title>XML Data Repository contains DBLP data set. http://www.cs.washington.edu/research/xmldatasets/www/repo sitory.html</title><year>2003</year><raw>XML Data Repository contains DBLP data set. http://www.cs.washington.edu/research/xmldatasets/www/repo sitory.html. July 2003.</raw></citation></citations><fileInfo><url>http://www.cs.ndsu.nodak.edu/~datasurg/papers/CAINE_03_PRANK.pdf</url><repID>rep1</repID><conversionTrace>PDFLib TET</conversionTrace><checkSums><checkSum><fileType>pdf</fileType><sha1>725613a2001cef68c4ceaf0c0aa9879889fb7bad</sha1></checkSum></checkSums></fileInfo></document>