<document id="10.1.1.1.1532"><title src="SVM HeaderParse 0.1">µSleep: A Technique for Reducing Energy Consumption in Handheld Devices</title><abstract src="SVM HeaderParse 0.1">handheld computing, battery-powered devices, energy management, sleep mode Energy management has become one of the great challenges in portable computing. This is the result of the increasing energy requirements of modern portable devices without a corresponding increase in battery technology. µSleep is a new energy reduction technique for handheld devices that is most effective when the handheld's processor is lightly loaded, such as when the user is reading a document or looking at a web page. When possible, rather than using the processor's idle mode, µSleep tries to put the processor in sleep mode for short periods (less than one second) without affecting the user's experience. To enhance the perception that the system is on, an image is maintained on the display and activity is resumed as a result of external events such as touchscreen and button activity. We have implemented µSleep on a prototype pocket computer, where it has reduced energy consumption by up to 60%.</abstract><keywords></keywords><authors><author id="4258"><name src="SVM HeaderParse 0.1">Lawrence S. Brakmo</name><order>1</order></author><author id="4259"><name src="SVM HeaderParse 0.1">Deborah A. Wallach</name><order>2</order></author><author id="4260"><name src="SVM HeaderParse 0.1">Marc A. Viredaz</name><order>3</order></author><author id="4261"><name src="SVM HeaderParse 0.1">Lawrence S. Brakmo</name><order>4</order></author><author id="4262"><name src="SVM HeaderParse 0.1">Deborah A. Wallach</name><order>5</order></author><author id="4263"><name src="SVM HeaderParse 0.1">Marc A. Viredaz</name><order>6</order></author></authors><citations src="ParsCit 1.0"><citation id="28761"><authors>F Douglis,P Krishnan,B Marsh</authors><title>Thwarting the Power-Hungry Disk</title><venue>In USENIX Winter 1994 Technical Conf. Proc</venue><venType>CONFERENCE</venType><year>1994</year><pages>29--3</pages><pubAddress>San Francisco, CA (USA</pubAddress><raw>F. Douglis, P. Krishnan, and B. Marsh. Thwarting the Power-Hungry Disk. In USENIX Winter 1994 Technical Conf. Proc., pp. 293 – 306, San Francisco, CA (USA), Jan. 1994. USENIX.</raw><contexts><context>icted, so that the processor can be woken up in time for the next (predicted) event [6]. The task of predicting when to shut off a processor offers similarities with that of spinning down a hard disk [9, 1, 13], however the time scales are very different. Another promising technique is dynamic voltagefrequency scaling. Since the power used by a CMOS circuit is proportional to the product f · v 2 , where f i</context></contexts></citation><citation id="28762"><authors>K Flautner,S Reinhardt,T Mudge</authors><title>Automatic Performance-Setting for Dynamic Voltage Scaling</title><venue>In Proc. Seventh Annual Int’l Conf. on Mobile Computing and Networking, Rome (I</venue><venType>CONFERENCE</venType><year>2001</year><publisher>ACM, IEEE, ACM Press</publisher><raw>K. Flautner, S. Reinhardt, and T. Mudge. Automatic Performance-Setting for Dynamic Voltage Scaling. In Proc. Seventh Annual Int’l Conf. on Mobile Computing and Networking, Rome (I), July 2001. ACM, IEEE, ACM Press.</raw><contexts><context>ortionally to the frequency, the energy required for this task decreases at the same rate as the voltage squared. Policies of when to to modify the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such a</context></contexts></citation><citation id="28763"><authors>S Gary,P Ippolito,G Gerosa,C Dietz,J Eno,H Sanchez</authors><title>PowerPC 603, TM A Microprocessor for Portable Computers</title><venue>IEEE Design &amp; Test of Computers, 11(4):14 – 23, Winter</venue><venType>CONFERENCE</venType><year>1994</year><raw>S. Gary, P. Ippolito, G. Gerosa, C. Dietz, J. Eno, and H. Sanchez. PowerPC 603, TM A Microprocessor for Portable Computers. IEEE Design &amp; Test of Computers, 11(4):14 – 23, Winter 1994.</raw><contexts><context>es potential improvements to µSleep and our experience implementing µSleep on a Pocket PC device.s2 Related Work Most recent processors targeted at battery-powered electronics feature low-power modes [3, 15, 8]. There is often a mode aimed at implementing the idle thread of a typical OS and another mode which is intended to be used for longer periods of inactivity (e.g., when the device is “turned off”). Th</context></contexts></citation><citation id="28764"><authors>K Govil,E Chan,H Wasserman</authors><title>Comparing Algorithms for Dynamic Speed-Setting of a LowPower CPU</title><venue>In Proc. First Int’l Conf. on Mobile Computing and Networking</venue><venType>CONFERENCE</venType><year>1995</year><pages>1--3</pages><publisher>ACM, NASA, ACM Press</publisher><pubAddress>25, Berkeley, CA (USA</pubAddress><raw>K. Govil, E. Chan, and H. Wasserman. Comparing Algorithms for Dynamic Speed-Setting of a LowPower CPU. In Proc. First Int’l Conf. on Mobile Computing and Networking, pp. 13 – 25, Berkeley, CA (USA), Nov. 1995. ACM, NASA, ACM Press.</raw><contexts><context>ortionally to the frequency, the energy required for this task decreases at the same rate as the voltage squared. Policies of when to to modify the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such a</context></contexts></citation><citation id="28765"><authors>W R Hamburgen,D A Wallach,M A Viredaz,L S Brakmo,C A Waldspurger,J F Bartlett,T Mann,K I Farkas</authors><venue>Itsy: Stretching the Bounds of Mobile Computing. Computer, 34(4):28 – 36</venue><venType>CONFERENCE</venType><year>2001</year><raw>W. R. Hamburgen, D. A. Wallach, M. A. Viredaz, L. S. Brakmo, C. A. Waldspurger, J. F. Bartlett, T. Mann, and K. I. Farkas. Itsy: Stretching the Bounds of Mobile Computing. Computer, 34(4):28 – 36, Apr. 2001.</raw><contexts><context>whichever performs best. In particular, dynamic voltage-frequency scaling could be used when µSleep can not be used. 3 Evaluation Platform For an evaluation platform, we used the Itsy pocket computer [5]. Itsy version 2 is a complete handheld device based on the StrongARM SA-1100 processor [7] with 32 Mbyte of flash memory, 32 Mbyte of DRAM, a 320 × 200-pixel gray-scale LCD, a touch screen, audio 1 T</context></contexts></citation><citation id="28766"><authors>C-H Hwang,A C-H Wu</authors><title>A Predictive System Shutdown Method for Energy Saving of Event-Driven Computation</title><venue>Design Automation of Electronic Systems, 5(2):226 – 241</venue><venType>CONFERENCE</venType><year>2000</year><raw>C.-H. Hwang and A. C.-H. Wu. A Predictive System Shutdown Method for Energy Saving of Event-Driven Computation. ACM Trans. on Design Automation of Electronic Systems, 5(2):226 – 241, Apr. 2000.</raw><contexts><context>he next event requiring the processor will occur is unknown. In some cases, the end of the shutdown time can be predicted, so that the processor can be woken up in time for the next (predicted) event [6]. The task of predicting when to shut off a processor offers similarities with that of spinning down a hard disk [9, 1, 13], however the time scales are very different. Another promising technique is </context><context> driven by I/O events, such as portable wireless terminals. Furthermore, they don’t implement their 2 techniques on a real system; their results are based on analysis and modeling. C.-H. Hwang’s work [6] focuses solely on mechanisms for predicting the length of idle periods on event driven applications (X Window System server, Netscape, telnet, and tin). J.R. Lorch and A.J. Smith’s work [10] is based</context></contexts></citation><citation id="28767"><authors>Intel</authors><venue>Intel R○ StrongARM R○ SA-1100 Microprocessor: Developer’s Manual</venue><venType>CONFERENCE</venType><year>1999</year><pages>278088--004</pages><raw>Intel. Intel R○ StrongARM R○ SA-1100 Microprocessor: Developer’s Manual, Aug. 1999. Document no. 278088-004.</raw><contexts><context>n µSleep can not be used. 3 Evaluation Platform For an evaluation platform, we used the Itsy pocket computer [5]. Itsy version 2 is a complete handheld device based on the StrongARM SA-1100 processor [7] with 32 Mbyte of flash memory, 32 Mbyte of DRAM, a 320 × 200-pixel gray-scale LCD, a touch screen, audio 1 This state is actually very similar to the idle mode on our system, which is implemented by </context></contexts></citation><citation id="28768"><authors>Intel</authors><title>Intel R○ XScale TM Microarchitecture</title><venType>TECHREPORT</venType><year>2000</year><tech>Technical Summary</tech><raw>Intel. Intel R○ XScale TM Microarchitecture: Technical Summary, 2000.</raw><contexts><context>es potential improvements to µSleep and our experience implementing µSleep on a Pocket PC device.s2 Related Work Most recent processors targeted at battery-powered electronics feature low-power modes [3, 15, 8]. There is often a mode aimed at implementing the idle thread of a typical OS and another mode which is intended to be used for longer periods of inactivity (e.g., when the device is “turned off”). Th</context><context>me that Itsy was developed, there were no processors targeted to handheld devices that were specified for voltage scaling. However, processors supporting voltage scaling, like the Intel XScale family [8], had already being announced. In order to study energy management techniques involving voltage-frequency scaling, our team decided to perform our own characterization of the voltage-frequency behavio</context></contexts></citation><citation id="28769"><authors>K Li,R Kumpf,P Horton,T Anderson</authors><title>A Quantitative Analysis of Disk Drive Power Management in Portable Computers</title><venue>In USENIX Winter 1994 Technical Conf. Proc</venue><venType>CONFERENCE</venType><year>1994</year><pages>27--9</pages><pubAddress>San Francisco, CA (USA</pubAddress><raw>K. Li, R. Kumpf, P. Horton, and T. Anderson. A Quantitative Analysis of Disk Drive Power Management in Portable Computers. In USENIX Winter 1994 Technical Conf. Proc., pp. 279 – 291, San Francisco, CA (USA), Jan. 1994. USENIX.</raw><contexts><context>icted, so that the processor can be woken up in time for the next (predicted) event [6]. The task of predicting when to shut off a processor offers similarities with that of spinning down a hard disk [9, 1, 13], however the time scales are very different. Another promising technique is dynamic voltagefrequency scaling. Since the power used by a CMOS circuit is proportional to the product f · v 2 , where f i</context></contexts></citation><citation id="28770"><authors>J R Lorch,A J Smith</authors><title>Scheduling techniques for reducing processor energy use</title><venue>in MacOS. Wireless Networks, 3(5):311 – 324</venue><venType>CONFERENCE</venType><year>1997</year><raw>J. R. Lorch and A. J. Smith. Scheduling techniques for reducing processor energy use in MacOS. Wireless Networks, 3(5):311 – 324, Oct. 1997.</raw><contexts><context>ng’s work [6] focuses solely on mechanisms for predicting the length of idle periods on event driven applications (X Window System server, Netscape, telnet, and tin). J.R. Lorch and A.J. Smith’s work [10] is based on processors that can be put to sleep by turning off the clock signal, which incurs very little latency, and which preserve most of their state when they are sleeping. 1 They also focus on </context></contexts></citation><citation id="28771"><authors>T Pering,T Burd,R Brodersen</authors><title>The Simulation and Evaluation of Dynamic Voltage Scaling Algorithms</title><venue>In Proc. 1998 Int’l Symp. on Low Power Electronics and Design</venue><venType>CONFERENCE</venType><year>1998</year><pages>7--6</pages><publisher>IEEE, ACM, ACM Press</publisher><pubAddress>81, Monterey, CA (USA</pubAddress><raw>T. Pering, T. Burd, and R. Brodersen. The Simulation and Evaluation of Dynamic Voltage Scaling Algorithms. In Proc. 1998 Int’l Symp. on Low Power Electronics and Design, pp. 76 – 81, Monterey, CA (USA), Aug. 1998. IEEE, ACM, ACM Press.</raw><contexts><context>ortionally to the frequency, the energy required for this task decreases at the same rate as the voltage squared. Policies of when to to modify the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such a</context></contexts></citation><citation id="28772"><authors>J Pouwelse,K Langendoen,H Sips</authors><title>Dynamic Voltage Scaling on a Low-Power Microprocessor</title><venue>In Int’l Symp. on Mobile Multimedia Systems &amp; Applications, Delft (NL</venue><venType>CONFERENCE</venType><year>2000</year><raw>J. Pouwelse, K. Langendoen, and H. Sips. Dynamic Voltage Scaling on a Low-Power Microprocessor. In Int’l Symp. on Mobile Multimedia Systems &amp; Applications, Delft (NL), Nov. 2000.</raw><contexts><context>ortionally to the frequency, the energy required for this task decreases at the same rate as the voltage squared. Policies of when to to modify the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such a</context></contexts></citation><citation id="28773"><authors>T Simunic,L Benini,P Glynn,G De Micheli</authors><title>Dynamic Power Management of Portable Systems</title><venue>In Proc. Sixth Annual Int’l Conf. on Mobile Computing and Networking</venue><venType>CONFERENCE</venType><year>2000</year><pages>1--1</pages><publisher>ACM, IEEE, ACM Press</publisher><pubAddress>19, Boston, MA (USA</pubAddress><raw>T. Simunic, L. Benini, P. Glynn, and G. De Micheli. Dynamic Power Management of Portable Systems. In Proc. Sixth Annual Int’l Conf. on Mobile Computing and Networking, pp. 11 – 19, Boston, MA (USA), Aug. 2000. ACM, IEEE, ACM Press.</raw><contexts><context>icted, so that the processor can be woken up in time for the next (predicted) event [6]. The task of predicting when to shut off a processor offers similarities with that of spinning down a hard disk [9, 1, 13], however the time scales are very different. Another promising technique is dynamic voltagefrequency scaling. Since the power used by a CMOS circuit is proportional to the product f · v 2 , where f i</context></contexts></citation><citation id="28774"><authors>M B Srivastava,A P Chandrakasan,R W Brodersen</authors><title>Predictive System Shutdown and Other Architectural Techniques for Energy Efficient Programmable Computation</title><venue>IEEE Trans. on Very Large Scale Integration (VLSI) Systems</venue><venType>JOURNAL</venType><year>1996</year><volume>4</volume><raw>M. B. Srivastava, A. P. Chandrakasan, and R. W. Brodersen. Predictive System Shutdown and Other Architectural Techniques for Energy Efficient Programmable Computation. IEEE Trans. on Very Large Scale Integration (VLSI) Systems, 4(1):42 – 55, Mar. 1996.</raw><contexts><context>t off when it is predicted that the processor will not be needed for a time interval long enough for the shutdown to be worthwhile. This prediction is generally made on the basis of past observations [14], under the assumption that the time when the next event requiring the processor will occur is unknown. In some cases, the end of the shutdown time can be predicted, so that the processor can be woken</context><context>fy the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such as portable wireless terminals. Furthermore, they don’t implement their 2 techniques on a real system; their results are based o</context></contexts></citation><citation id="28775"><authors>R Stephany,K Anne,J Bell,G Cheney,J Eno,G Hoeppner,G Joe,R Kaye,J Lear,T Litch,J Meyer,J Montanaro,K Patton,T Pham,R Reis,M Silla,J Slaton,K Snyder,R Witek</authors><venue>A 200MHz 32b 0.5W CMOS RISC Microprocessor. In 1998 IEEE Int’l Solid-State Circuits Conf.: Digest of Technical Papers</venue><venType>CONFERENCE</venType><year>1998</year><pages>23--8</pages><publisher>IEEE</publisher><pubAddress>San Francisco, CA (USA</pubAddress><raw>R. Stephany, K. Anne, J. Bell, G. Cheney, J. Eno, G. Hoeppner, G. Joe, R. Kaye, J. Lear, T. Litch, J. Meyer, J. Montanaro, K. Patton, T. Pham, R. Reis, M. Silla, J. Slaton, K. Snyder, and R. Witek. A 200MHz 32b 0.5W CMOS RISC Microprocessor. In 1998 IEEE Int’l Solid-State Circuits Conf.: Digest of Technical Papers, pp. 238 – 239, 443, San Francisco, CA (USA), Feb. 1998. IEEE.</raw><contexts><context>es potential improvements to µSleep and our experience implementing µSleep on a Pocket PC device.s2 Related Work Most recent processors targeted at battery-powered electronics feature low-power modes [3, 15, 8]. There is often a mode aimed at implementing the idle thread of a typical OS and another mode which is intended to be used for longer periods of inactivity (e.g., when the device is “turned off”). Th</context></contexts></citation><citation id="28776"><authors>M A Viredaz,D A Wallach</authors><title>Power Evaluation of a Handheld Computer</title><venue>74</venue><venType>CONFERENCE</venType><year>2003</year><volume>23</volume><raw>M. A. Viredaz and D. A. Wallach. Power Evaluation of a Handheld Computer. IEEE Micro, 23(1):66 – 74, Jan. – Feb. 2003.</raw><contexts><context> 5.2 Measurements The Itsy features several sense resistors that allow us to monitor the power dissipated by the whole system. We used a measurement setup fairly similar to a setup designed elsewhere [16]. Briefly summarized, we measure voltages directly and currents indirectly as voltage drops across sense resistors. For all experiments, the battery was replaced by a power supply set to 3.75 V. Itsy,</context></contexts></citation><citation id="28777"><authors>M Weiser,B Welch,A Demers,S Shenker</authors><title>Scheduling for Reduced CPU Energy</title><venue>In Proc. First Symp. on Operating Systems Design and Implementation</venue><venType>CONFERENCE</venType><year>1994</year><pages>1--3</pages><pubAddress>23, Monterey, CA (USA</pubAddress><raw>M. Weiser, B. Welch, A. Demers, and S. Shenker. Scheduling for Reduced CPU Energy. In Proc. First Symp. on Operating Systems Design and Implementation, pp. 13 – 23, Monterey, CA (USA), Nov. 1994. USENIX.</raw><contexts><context>ortionally to the frequency, the energy required for this task decreases at the same rate as the voltage squared. Policies of when to to modify the voltage and frequency have been extensively studied [17, 4, 11, 2, 12]. Our technique differs from earlier uses of short duration sleep in significant ways. For example, M.B. Srivastava’s work [14] focuses on devices where all computation is driven by I/O events, such a</context></contexts></citation></citations><fileInfo><url>http://www.hpl.hp.com/techreports/2004/HPL-2004-11.pdf</url><repID>rep1</repID><conversionTrace>PDFLib TET</conversionTrace><checkSums><checkSum><fileType>pdf</fileType><sha1>7e8712caa25870631de125c8641a222805c31df6</sha1></checkSum></checkSums></fileInfo></document>