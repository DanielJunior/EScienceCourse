<document id="10.1.1.1.1599"><title src="SVM HeaderParse 0.1">Hierarchical Web Caching Systems: Modeling, Design and Experimental Results</title><abstract src="SVM HeaderParse 0.1">Abstract—This paper aims at finding fundamental design principles for hierarchical web caching. An analytical modeling technique is developed to characterize an uncooperative twolevel hierarchical caching system where the least recently used (LRU) algorithm is locally run at each cache. With this modeling technique, we are able to identify a characteristic time for each cache, which plays a fundamental role in understanding the caching processes. In particular, a cache can be viewed roughly as a low-pass filter with its cutoff frequency equal to the inverse of the characteristic time. Documents with access frequencies lower than this cutoff frequency have good chances to pass through the cache without cache hits. This viewpoint enables us to take any branch of the cache tree as a tandem of low-pass filters at different cutoff frequencies, which further results in the finding of two fundamental design principles. Finally, to demonstrate how to use the principles to guide the caching algorithm design, we propose a cooperative hierarchical web caching architecture based on these principles. Both model-based and real trace simulation studies show that the proposed cooperative architecture results in more than 50 % memory saving and substantial central processing unit (CPU) power saving for the management and update of cache entries compared with the traditional uncooperative hierarchical caching architecture. Index Terms—Cache replacement algorithms, hierarchical caching, least recently used (LRU), web caching. I.</abstract><keywords></keywords><authors></authors><citations src="ParsCit 1.0"><citation id="30012"><authors>K Ross</authors><title>Hash routing for collections of shared web caches</title><venue>IEEE Network Mag</venue><venType>JOURNAL</venType><year>1997</year><pages>37--45</pages><raw>K. Ross, “Hash routing for collections of shared web caches,” IEEE Network Mag., pp. 37–45, Nov. 1997.</raw><contexts><context>uted and hybrid caching architectures [5], [12]. There are three major contributions of this paper. First, unlike the previous analytic work on web caching which is based on statistic analysis, e.g., [1], [3], this paper proposes a stochastic model, which allows us to characterize the caching processes for individual documents in a two-level hierarchical caching system. In this model, the LRU algorit</context></contexts></citation><citation id="30013"><authors>H Che,Z Wang,Y Tung</authors><title>Analysis and design of hierarchical web caching systems</title><venue>Proc. IEEE INFOCOM’01</venue><venType>CONFERENCE</venType><year>2001</year><pages>1416--1424</pages><volume>3</volume><raw>H. Che, Z. Wang, and Y. Tung, “Analysis and design of hierarchical web caching systems,” Proc. IEEE INFOCOM’01, vol. 3, pp. 1416–1424, Apr. 2001.</raw></citation><citation id="30014"><authors>J Zhang,R Izmailov,D Reininger,M Ott</authors><title>Web caching framework: Analytical models and beyond</title><venue>in IEEE Workshop Internet Applications</venue><venType>CONFERENCE</venType><year>1999</year><pages>132--141</pages><raw>J. Zhang, R. Izmailov, D. Reininger, and M. Ott, “Web caching framework: Analytical models and beyond,” in IEEE Workshop Internet Applications 1999, July 1999, pp. 132–141.</raw><contexts><context>he replacement algorithm design when caches are arranged in a hierarchical structure. Most of the research papers on cache replacement algorithm design, to date, have focused on a single cache, e.g., [3], [6], [8], [10], [13]. However, when caches are arranged in a hierarchical structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good perfo</context><context>and hybrid caching architectures [5], [12]. There are three major contributions of this paper. First, unlike the previous analytic work on web caching which is based on statistic analysis, e.g., [1], [3], this paper proposes a stochastic model, which allows us to characterize the caching processes for individual documents in a two-level hierarchical caching system. In this model, the LRU algorithm ru</context><context>later. With this assumption, cache sizes are measured in the unit of document size. Since Zipf-like distribution has been widely tested against the distributions collected from the real traces, e.g., [3], [7], [10], as (1) Fig. 1. Two-level hierarchical web caching structure. well as our own tests in Section IV, we model by Zipf-like distributions for and where is the normalization factor, is the pop</context></contexts></citation><citation id="30015"><title>Proxy Caching that Estimates Page Load Delays</title><venType>TECHREPORT</venType><tech>edu/~chitra/docs/96trNEW</tech><raw>Proxy Caching that Estimates Page Load Delays, R. P. Wooster and M. Abrams. [Online]. Available: http://vtopus.cs.vt. edu/~chitra/docs/96trNEW/</raw><contexts><context> A. Architecture Overview The proposed cooperative hierarchical caching architecture can be described as follows. Like the traditional uncooperative hierarchical caching architecture, such as Harvest [4], the LRU algorithm is used locally at individual caches throughout the cache hierarchy and a request is searched upward starting from the lowest level cache. However, the proposed architecture involv</context></contexts></citation><citation id="30016"><authors>S G Dykes,C L Jeffery,S Das</authors><title>Taxonomy and design analysis for distributed web caching</title><venue>in Proc. HICSS-32</venue><venType>CONFERENCE</venType><year>1999</year><pages>286--295</pages><raw>S. G. Dykes, C. L. Jeffery, and S. Das, “Taxonomy and design analysis for distributed web caching,” in Proc. HICSS-32, 1999, pp. 286–295.</raw><contexts><context>les in the context of hierarchical caching algorithm design. Some of the results of this study are also applicable to other caching architectures, such as distributed and hybrid caching architectures [5], [12]. There are three major contributions of this paper. First, unlike the previous analytic work on web caching which is based on statistic analysis, e.g., [1], [3], this paper proposes a stochasti</context></contexts></citation><citation id="30017"><authors>P Cao,S Irani</authors><title>Cost-Aware WWW Proxy Caching Algorithms</title><venue>in Proc. 1997 USENIX Symp. Internet Technology and Systems</venue><venType>CONFERENCE</venType><year>1997</year><pages>193--206</pages><raw>P. Cao and S. Irani, “Cost-Aware WWW Proxy Caching Algorithms,” in Proc. 1997 USENIX Symp. Internet Technology and Systems, Dec. 1997, pp. 193–206.</raw><contexts><context>placement algorithm design when caches are arranged in a hierarchical structure. Most of the research papers on cache replacement algorithm design, to date, have focused on a single cache, e.g., [3], [6], [8], [10], [13]. However, when caches are arranged in a hierarchical structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good performanc</context></contexts></citation><citation id="30018"><authors>C R Cunha,A Bestavros,M E Crovella</authors><venType>TECHREPORT</venType><year>1995</year><pubAddress>Boston, MA</pubAddress><tech>02 215, Tech. Rep.BUCS-TR-1995-010</tech><raw>C. R. Cunha, A. Bestavros, and M. E. Crovella, “Characteristics of WWW Client-Based Traces,” Boston University, CS Dept., Boston, MA 02 215, Tech. Rep.BUCS-TR-1995-010, Apr. 1995.</raw><contexts><context>. With this assumption, cache sizes are measured in the unit of document size. Since Zipf-like distribution has been widely tested against the distributions collected from the real traces, e.g., [3], [7], [10], as (1) Fig. 1. Two-level hierarchical web caching structure. well as our own tests in Section IV, we model by Zipf-like distributions for and where is the normalization factor, is the populari</context></contexts></citation><citation id="30019"><authors>A Belloum,L O Hertzberger</authors><title>Dealing with one-timer-documents in web caching</title><venue>in Proc. 24th Euromicro Conf</venue><venType>CONFERENCE</venType><year>1998</year><pages>544--550</pages><volume>2</volume><raw>A. Belloum and L. O. Hertzberger, “Dealing with one-timer-documents in web caching,” in Proc. 24th Euromicro Conf., vol. 2, 1998, pp. 544–550.</raw><contexts><context>ment algorithm design when caches are arranged in a hierarchical structure. Most of the research papers on cache replacement algorithm design, to date, have focused on a single cache, e.g., [3], [6], [8], [10], [13]. However, when caches are arranged in a hierarchical structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good performance. Al</context></contexts></citation><citation id="30020"><title>A Hierarchical Internet Object Cache</title><raw>A Hierarchical Internet Object Cache, A. Chankhunthod, P. B. Danzig, C. Neerdaels, M. F. Schwartz, and K. J. Worrell. [Online]. Available: http://netweb.usc.edu/danzig/cache/cache.html</raw><contexts><context>ed intrinsically in a hierarchical structure due to the hierarchical nature of the Internet. An example is the four-level cache hierarchy which matches with the hierarchical structure of the Internet [9], i.e., bottom, institutional, regional, and backbone. Hence, it is of fundamental Manuscript received May 2001; revised December 2001. This work was presented in part at IEEE Infocom’01 Conference, A</context></contexts></citation><citation id="30021"><authors>L Breslau,P Cao,L Fan,G Phillips,S Shenker</authors><title>Web caching and Zipf-like distributions: Evidence and implications</title><venue>Proc. IEEE INFOCOM’99</venue><venType>CONFERENCE</venType><year>1999</year><pages>126--134</pages><volume>1</volume><raw>L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker, “Web caching and Zipf-like distributions: Evidence and implications,” Proc. IEEE INFOCOM’99, vol. 1, pp. 126–134, Apr. 1999.</raw><contexts><context>algorithm design when caches are arranged in a hierarchical structure. Most of the research papers on cache replacement algorithm design, to date, have focused on a single cache, e.g., [3], [6], [8], [10], [13]. However, when caches are arranged in a hierarchical structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good performance. Although</context><context>h this assumption, cache sizes are measured in the unit of document size. Since Zipf-like distribution has been widely tested against the distributions collected from the real traces, e.g., [3], [7], [10], as (1) Fig. 1. Two-level hierarchical web caching structure. well as our own tests in Section IV, we model by Zipf-like distributions for and where is the normalization factor, is the popularity ran</context></contexts></citation><citation id="30022"><authors>M R Korupolu,M Dahlin</authors><title>Coordinated placement and replacement for large-scale distributed caches</title><venue>in Proc. IEEE Workshop on Internet Applications</venue><venType>CONFERENCE</venType><year>1999</year><pages>62--71</pages><raw>M. R. Korupolu and M. Dahlin, “Coordinated placement and replacement for large-scale distributed caches,” in Proc. IEEE Workshop on Internet Applications, June 1999, pp. 62–71.</raw><contexts><context> structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good performance. Although results on the optimal hierarchical caching exists, e.g., [11], they are obtained based on the assumption that global caching information is known to every cache in the cache hierarchy, which is generally unavailable in practice. Moreover, most of the research p</context></contexts></citation><citation id="30023"><authors>J Wang</authors><title>A survey of web caching schemes for the internet</title><venue>ACM Comp. Commun. Rev</venue><venType>JOURNAL</venType><year>1999</year><pages>36--46</pages><volume>29</volume><raw>J. Wang, “A survey of web caching schemes for the internet,” ACM Comp. Commun. Rev., vol. 29, no. 5, pp. 36–46, Oct. 1999.</raw><contexts><context>n the context of hierarchical caching algorithm design. Some of the results of this study are also applicable to other caching architectures, such as distributed and hybrid caching architectures [5], [12]. There are three major contributions of this paper. First, unlike the previous analytic work on web caching which is based on statistic analysis, e.g., [1], [3], this paper proposes a stochastic mode</context></contexts></citation><citation id="30024"><authors>M Abrams,C R Standridge,G Abdulla,S Williams,E A Fox</authors><title>Caching proxies: Limitations and potentials</title><venue>in Proc. 4th Int. World-Wide Web Conf</venue><venType>CONFERENCE</venType><year>1995</year><pubAddress>Boston, MA</pubAddress><raw>M. Abrams, C. R. Standridge, G. Abdulla, S. Williams, and E. A. Fox, “Caching proxies: Limitations and potentials,” in Proc. 4th Int. World-Wide Web Conf, Boston, MA, Dec. 1995.</raw><contexts><context>thm design when caches are arranged in a hierarchical structure. Most of the research papers on cache replacement algorithm design, to date, have focused on a single cache, e.g., [3], [6], [8], [10], [13]. However, when caches are arranged in a hierarchical structure, running a cache replacement algorithm which is optimized for an isolated cache may not lead to overall good performance. Although resul</context></contexts></citation><citation id="30025"><authors>F P Kelly</authors><title>The clifford Paterson lecture</title><venue>in Proc. Royal Society, London A</venue><venType>JOURNAL</venType><year>1995</year><pages>1--20</pages><volume>444</volume><raw>F. P. Kelly, “The clifford Paterson lecture, 1995: Modeling communication networks, present and future,” in Proc. Royal Society, London A, vol. 444, 1995, pp. 1–20.</raw></citation><citation id="30026"><authors>D Bertsekas,R Gallager</authors><title>Data Networks</title><year>1987</year><publisher>Prentice-Hall</publisher><pubAddress>Englewood Cliffs, NJ</pubAddress><raw>D. Bertsekas and R. Gallager, Data Networks. Englewood Cliffs, NJ: Prentice-Hall, 1987.</raw><contexts><context>ache and 1. Here, is the document sample space size. 3) All the documents have the same size. Assumptions 1 and 2 imply that the request arrival process for document is Poisson with mean arrival rate [15], where Assumption 3 is a pretty strong one but it will not affect the correctness of the qualitative results, as we shall explain later. With this assumption, cache sizes are measured in the unit of </context></contexts></citation><citation id="30027"><authors>G R Grimmett,D R Stirzaker</authors><venue>Probability and Random Processes</venue><venType>CONFERENCE</venType><year>1992</year><publisher>Univ. Press</publisher><pubAddress>New York: Oxford</pubAddress><raw>G. R. Grimmett and D. R. Stirzaker, Probability and Random Processes. New York: Oxford Univ. Press, 1992.</raw></citation><citation id="30028"><authors>Xian University,P R China</authors><title>Anonymized Access Log [Online]. Available: ftp://ircache.nlanr. net/Traces/ Hao Che received the B.S. degree from</title><venue>Nanjing University</venue><venType>CONFERENCE</venType><year>1992</year><pubAddress>Nanjing, China</pubAddress><raw>Anonymized Access Log [Online]. Available: ftp://ircache.nlanr. net/Traces/ Hao Che received the B.S. degree from Nanjing University, Nanjing, China, the M.S. degree in physics from the University of Texas at Arlington, TX, in 1994, and the Ph.D. degree in electrical engineering from the University of Texas at Austin, TX, in 1998. He was an Assistant Professor of Electrical Engineering at the Pennsylvania State University, University Park, PA, from 1998 to 2001. Since July 2000, he has been a System Architect with Santera Systems, Inc., Plano, TX . He has also served as an Adjunct Assistant Professor at the Pennsylvania State University and a Visiting Professor in the school of Information Science and Engineering, Yunnan University, China, since 2001. His current research interests include network architecture and design, network resource management, multiservice switching architecture, and network processor design. Ye Tung (S’95–M’01) received the B.S. degree from Xian Jiaotong University, Xian, P. R. China, in 1990, and the Ph.D. degree from the Pennsylvania State University, University Park, PA, in 2001. Since January 2002, he has been an Assistant Professor at the Department of Electrical and Computer Engineering, University of South Alabama, Mobile, Alabama. His current research interests include communication systems, computer networking, and server technology. Zhijun Wang received the M.S. degree in physics from Huazhong University of Science and Technology, Wuhan, China, in 1992, and the M.S. degree in electrical engineering from the Pennsylvania State University, University Park, PA, in 2001. He is working toward the Ph.D. degree in computer science and engineering at the University of Texas at Arlington, TX. His current research interests include wireless web cache management, mobile computing, and wireless networks.</raw><contexts><context> cache system built upon Squid caches. NLANR is one of the few organizations which provide the real web traces for public access. The traces used for this study are downloaded from the NLANR web site [17]. Following the naming convention by the trace owner, the names of the traces studied and the corresponding proxy locations are listed as follows: • bo: Boulder, CO; • pa: Palo Alto, CA; • pb: Pittsbu</context></contexts></citation></citations><fileInfo><url>http://crystal.uta.edu/~hche/PUBLICATIONS/papers/caching-jsac.pdf</url><repID>rep1</repID><conversionTrace>PDFLib TET</conversionTrace><checkSums><checkSum><fileType>pdf</fileType><sha1>fa2a489c0f5d5cdc3e3792cc2883d858edea3a9f</sha1></checkSum></checkSums></fileInfo></document>