<document id="10.1.1.1.1600"><title src="SVM HeaderParse 0.1">Low Overhead Encodings For Reduced Activity In Data And Address Buses</title><abstract src="SVM HeaderParse 0.1">This work describes and evaluates two bus encoding methods that aim at reducing the number of transitions observed in data and address buses. Unlike existing proposals, these methods have the characteristic that they require no extra bus lines and only a small amount of encoding logic. The experimental results, obtained in traces from the SPEC95 benchmark, show that transition coding is effective in reducing the number of transitions in data buses, while bit prediction methods can be applied with success to address buses. I.</abstract><keywords></keywords><authors><author id="4444"><name src="SVM HeaderParse 0.1">Paulo J. Ramos</name><address src="SVM HeaderParse 0.1">Rua Alves Redol, 9 Rua Alves Redol, 9; 1000 Lisboa, Portugal 1000 Lisboa, Portugal</address><email src="SVM HeaderParse 0.1">pjjr@algos.inesc.pt</email><order>1</order></author><author id="4445"><name src="SVM HeaderParse 0.1">Arlindo L. Oliveira</name><address src="SVM HeaderParse 0.1">Rua Alves Redol, 9 Rua Alves Redol, 9; 1000 Lisboa, Portugal 1000 Lisboa, Portugal</address><email src="SVM HeaderParse 0.1">aml@inesc.pt</email><order>2</order></author></authors><citations src="ParsCit 1.0"><citation id="30029"><authors>D Burger,T M Austin</authors><title>The simplescalar tool set, version 2.0</title><venue>University of Wisconsin-Madison Computer Sciences Department</venue><venType>TECHREPORT</venType><year>1997</year><pages>24--29</pages><volume>98</volume><tech>Technical Report 1342</tech><raw>D. Burger and T. M. Austin. The simplescalar tool set, version 2.0. Technical Report 1342, University of Wisconsin-Madison Computer Sciences Department, 1997. [BMM ¡ 98] L. Benini, G. De Micheli, E. Macii, D. Sciuto, and C. Silvano. System-level power optimization of special purpose applications: The Beach solution. In Proceedings of the International Symposium on Low Power Electronics and Design, pages 24– 29, 1998.</raw><contexts><context>ticular trace, an advantage that is significant in systems that are to be operated in a number of different conditions. A. Experimental setup IV. EXPERIMENTAL RESULTS We used the SimpleScalar toolset [BA97] to evaluate the efficiency of the proposed approaches in a set of traces obtained from the execution of a number of programs in the SPEC95 benchmarks. The model used by the simulator is a modified ve</context></contexts></citation><citation id="30030"><authors>T Lang E Mussol,J Cortadella</authors><title>Exploiting the locality of memory references to reduce the address bus energy</title><venue>In Proceedings of the 1997 International Symposium on Low Power Electronics and Design</venue><venType>CONFERENCE</venType><year>1997</year><pages>202--207</pages><pubAddress>Montrey, CA</pubAddress><raw>T. Lang E. Mussol and J. Cortadella. Exploiting the locality of memory references to reduce the address bus energy. In Proceedings of the 1997 International Symposium on Low Power Electronics and Design, pages 202–207, Montrey, CA, 1997.</raw><contexts><context>sing a code that exhibits a low number of transitions for consecutive addresses [STD94], but this code rapidly loses efficiency when the percentage of sequential accesses decreases. In another method [EMC97], the address space is split into working zones. A reference to one address in one of these zones can be transmitted as a relative reference to the address of that working zone. Although this techniqu</context></contexts></citation><citation id="30031"><authors>R Murgai,M Fujita,A L Oliveira</authors><title>Using complementation and resequencing to minimize transitions</title><venue>In Proc. of the ACM/IEEE Design Automation Conference</venue><venType>CONFERENCE</venType><year>1998</year><pages>694--697</pages><publisher>ACM Press</publisher><pubAddress>Los Angeles, CA</pubAddress><raw>R. Murgai, M. Fujita, and A. L. Oliveira. Using complementation and resequencing to minimize transitions. In Proc. of the ACM/IEEE Design Automation Conference, pages 694–697, Los Angeles, CA, June 1998. ACM Press.</raw><contexts><context>nlikely that it will be used in a large number of actual designs. Techniques that aim at reducing the power dissipated in buses by dynamically reordering and complementing the words to be transmitted [MFO98] have also been proposed but their actual implementation in hardware is complex and the techniques are applicable only in very special circumstances. III. LOW OVERHEAD BUS ENCODINGS With the possible </context></contexts></citation><citation id="30032"><authors>M R Stan,W P Burleson</authors><title>Limited-weight codes for lowpower i/o</title><venue>In Proceedings of the 1994 International Workshop on Low Power Design</venue><venType>CONFERENCE</venType><year>1994</year><pages>209--214</pages><raw>M. R. Stan and W. P. Burleson. Limited-weight codes for lowpower i/o. In Proceedings of the 1994 International Workshop on Low Power Design, pages 209–214, 1994.</raw><contexts><context>ches to the problem. One approach is based on the application of transition coding, a method that has already been proposed by other researchers in conjunction with a transformation on the data words [SB94]. The proposal made here uses transition coding without applying any recoding of the transmitted data, a method that, intuitively, seems to have little advantage over the transmission of the plain cod</context><context>tion of the Hamming distance between successive bus words requires the use of a non-trivial amount of hardware, that will, in practice, make the approach hard to apply in wide buses. Another approach [SB94] is based on the idea of changing the way bus words are encoded as to reduce the probability of occurrence of a § in the bus line (¨�© ) to a value smaller than 0.5. This is obtained by using wider bu</context><context>�¦�¤�� ¨¥��������� and nothing is gained by using transition coding. This can be overcome if the words on the bus are re-encoded, with the objective of reducing the probability of the presence of a § [SB94]. We must note, however, that the above analysis is not applicable to real traffic on buses. On the first place, ones and zeros are usually not equally likely to appear. On second place, consecutive w</context></contexts></citation><citation id="30033"><authors>M R Stan,W P Burleson</authors><title>Bus-invert coding for low</title><raw>M. R. Stan and W. P. Burleson. Bus-invert coding for low</raw><contexts><context> of redundant codes is that, when more than one code is possible for a given bus word, the system may chose the code that leads to the most reduced activity in the bus lines. In the bus invert method [SB95], an extra bus line is used to signal if the code on the bus is or is not complemented. The idea is that, if the previous pattern differs from the current one in more thans¢¡¤£ bits, the complement of</context></contexts></citation><citation id="30034"><authors>power io</authors><title>Saving power in the control path of embedded processors</title><venue>IEEE Design and Test of Computers</venue><venType>CONFERENCE</venType><year>1995</year><pages>24--30</pages><volume>1</volume><raw> power i/o. IEEE Transactions on VLSI Systems, 1(1):49–58, 1995. C. L. Su, C. Y. Tsui, and A. M. Despain. Saving power in the control path of embedded processors. IEEE Design and Test of Computers, pages 24–30, 1994.</raw><contexts><context> to the address bus make use of the locality of memory references. One obvious approach is to encode the address space using a code that exhibits a low number of transitions for consecutive addresses [STD94], but this code rapidly loses efficiency when the percentage of sequential accesses decreases. In another method [EMC97], the address space is split into working zones. A reference to one address in o</context></contexts></citation></citations><fileInfo><url>http://tahoe.inesc-id.pt/pt/Ficheiros/961.pdf</url><repID>rep1</repID><conversionTrace>PDFLib TET</conversionTrace><checkSums><checkSum><fileType>pdf</fileType><sha1>08bfb354b6541a279d70afc46d1c0914754a4c5e</sha1></checkSum></checkSums></fileInfo></document>